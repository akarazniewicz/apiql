# Generated from C:/Users/karaznie/apiql/apiql/grammar\ApiQL.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2(")
        buf.write("\u015a\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\3\2\3\2\3\3\3\3")
        buf.write("\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3")
        buf.write("\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\r\3")
        buf.write("\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37")
        buf.write("\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3\"\3\"\5")
        buf.write("\"\u0115\n\"\3#\3#\7#\u0119\n#\f#\16#\u011c\13#\3$\3$")
        buf.write("\3$\7$\u0121\n$\f$\16$\u0124\13$\3$\3$\3%\3%\3%\5%\u012b")
        buf.write("\n%\3&\3&\3&\3&\3&\3&\3\'\3\'\3(\3(\3)\5)\u0138\n)\3)")
        buf.write("\3)\3)\6)\u013d\n)\r)\16)\u013e\5)\u0141\n)\3)\3)\5)\u0145")
        buf.write("\n)\3)\5)\u0148\n)\3*\3*\3*\7*\u014d\n*\f*\16*\u0150\13")
        buf.write("*\5*\u0152\n*\3+\6+\u0155\n+\r+\16+\u0156\3+\3+\2\2,\3")
        buf.write("\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16")
        buf.write("\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61")
        buf.write("\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I\2K\2M\2O\2")
        buf.write("Q&S\'U(\3\2\f\5\2C\\aac|\7\2\60\60\62;C\\aac|\n\2$$\61")
        buf.write("\61^^ddhhppttvv\5\2\62;CHch\5\2\2!$$^^\3\2\62;\4\2GGg")
        buf.write("g\4\2--//\3\2\63;\5\2\13\f\17\17\"\"\2\u0162\2\3\3\2\2")
        buf.write("\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2")
        buf.write("\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25")
        buf.write("\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3")
        buf.write("\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2")
        buf.write("\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2")
        buf.write("\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2")
        buf.write("9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2")
        buf.write("\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\3W\3\2\2\2\5Y\3\2\2\2\7]\3\2\2\2\t_\3\2")
        buf.write("\2\2\13a\3\2\2\2\rd\3\2\2\2\17g\3\2\2\2\21j\3\2\2\2\23")
        buf.write("l\3\2\2\2\25o\3\2\2\2\27q\3\2\2\2\31t\3\2\2\2\33y\3\2")
        buf.write("\2\2\35\177\3\2\2\2\37\u0087\3\2\2\2!\u0090\3\2\2\2#\u009b")
        buf.write("\3\2\2\2%\u00a7\3\2\2\2\'\u00b0\3\2\2\2)\u00ba\3\2\2\2")
        buf.write("+\u00c3\3\2\2\2-\u00cf\3\2\2\2/\u00d9\3\2\2\2\61\u00e6")
        buf.write("\3\2\2\2\63\u00ec\3\2\2\2\65\u00ef\3\2\2\2\67\u00f5\3")
        buf.write("\2\2\29\u00f7\3\2\2\2;\u00fc\3\2\2\2=\u0102\3\2\2\2?\u0107")
        buf.write("\3\2\2\2A\u0110\3\2\2\2C\u0114\3\2\2\2E\u0116\3\2\2\2")
        buf.write("G\u011d\3\2\2\2I\u0127\3\2\2\2K\u012c\3\2\2\2M\u0132\3")
        buf.write("\2\2\2O\u0134\3\2\2\2Q\u0137\3\2\2\2S\u0151\3\2\2\2U\u0154")
        buf.write("\3\2\2\2WX\7=\2\2X\4\3\2\2\2YZ\7c\2\2Z[\7p\2\2[\\\7f\2")
        buf.write("\2\\\6\3\2\2\2]^\7*\2\2^\b\3\2\2\2_`\7+\2\2`\n\3\2\2\2")
        buf.write("ab\7q\2\2bc\7t\2\2c\f\3\2\2\2de\7?\2\2ef\7?\2\2f\16\3")
        buf.write("\2\2\2gh\7#\2\2hi\7?\2\2i\20\3\2\2\2jk\7@\2\2k\22\3\2")
        buf.write("\2\2lm\7@\2\2mn\7?\2\2n\24\3\2\2\2op\7>\2\2p\26\3\2\2")
        buf.write("\2qr\7>\2\2rs\7?\2\2s\30\3\2\2\2tu\7n\2\2uv\7k\2\2vw\7")
        buf.write("m\2\2wx\7g\2\2x\32\3\2\2\2yz\7k\2\2z{\7n\2\2{|\7k\2\2")
        buf.write("|}\7m\2\2}~\7g\2\2~\34\3\2\2\2\177\u0080\7p\2\2\u0080")
        buf.write("\u0081\7q\2\2\u0081\u0082\7v\2\2\u0082\u0083\7n\2\2\u0083")
        buf.write("\u0084\7k\2\2\u0084\u0085\7m\2\2\u0085\u0086\7g\2\2\u0086")
        buf.write("\36\3\2\2\2\u0087\u0088\7p\2\2\u0088\u0089\7q\2\2\u0089")
        buf.write("\u008a\7v\2\2\u008a\u008b\7k\2\2\u008b\u008c\7n\2\2\u008c")
        buf.write("\u008d\7k\2\2\u008d\u008e\7m\2\2\u008e\u008f\7g\2\2\u008f")
        buf.write(" \3\2\2\2\u0090\u0091\7u\2\2\u0091\u0092\7v\2\2\u0092")
        buf.write("\u0093\7c\2\2\u0093\u0094\7t\2\2\u0094\u0095\7v\2\2\u0095")
        buf.write("\u0096\7u\2\2\u0096\u0097\7y\2\2\u0097\u0098\7k\2\2\u0098")
        buf.write("\u0099\7v\2\2\u0099\u009a\7j\2\2\u009a\"\3\2\2\2\u009b")
        buf.write("\u009c\7k\2\2\u009c\u009d\7u\2\2\u009d\u009e\7v\2\2\u009e")
        buf.write("\u009f\7c\2\2\u009f\u00a0\7t\2\2\u00a0\u00a1\7v\2\2\u00a1")
        buf.write("\u00a2\7u\2\2\u00a2\u00a3\7y\2\2\u00a3\u00a4\7k\2\2\u00a4")
        buf.write("\u00a5\7v\2\2\u00a5\u00a6\7j\2\2\u00a6$\3\2\2\2\u00a7")
        buf.write("\u00a8\7g\2\2\u00a8\u00a9\7p\2\2\u00a9\u00aa\7f\2\2\u00aa")
        buf.write("\u00ab\7u\2\2\u00ab\u00ac\7y\2\2\u00ac\u00ad\7k\2\2\u00ad")
        buf.write("\u00ae\7v\2\2\u00ae\u00af\7j\2\2\u00af&\3\2\2\2\u00b0")
        buf.write("\u00b1\7k\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3\7p\2\2\u00b3")
        buf.write("\u00b4\7f\2\2\u00b4\u00b5\7u\2\2\u00b5\u00b6\7y\2\2\u00b6")
        buf.write("\u00b7\7k\2\2\u00b7\u00b8\7v\2\2\u00b8\u00b9\7j\2\2\u00b9")
        buf.write("(\3\2\2\2\u00ba\u00bb\7e\2\2\u00bb\u00bc\7q\2\2\u00bc")
        buf.write("\u00bd\7p\2\2\u00bd\u00be\7v\2\2\u00be\u00bf\7c\2\2\u00bf")
        buf.write("\u00c0\7k\2\2\u00c0\u00c1\7p\2\2\u00c1\u00c2\7u\2\2\u00c2")
        buf.write("*\3\2\2\2\u00c3\u00c4\7p\2\2\u00c4\u00c5\7q\2\2\u00c5")
        buf.write("\u00c6\7v\2\2\u00c6\u00c7\7e\2\2\u00c7\u00c8\7q\2\2\u00c8")
        buf.write("\u00c9\7p\2\2\u00c9\u00ca\7v\2\2\u00ca\u00cb\7c\2\2\u00cb")
        buf.write("\u00cc\7k\2\2\u00cc\u00cd\7p\2\2\u00cd\u00ce\7u\2\2\u00ce")
        buf.write(",\3\2\2\2\u00cf\u00d0\7k\2\2\u00d0\u00d1\7e\2\2\u00d1")
        buf.write("\u00d2\7q\2\2\u00d2\u00d3\7p\2\2\u00d3\u00d4\7v\2\2\u00d4")
        buf.write("\u00d5\7c\2\2\u00d5\u00d6\7k\2\2\u00d6\u00d7\7p\2\2\u00d7")
        buf.write("\u00d8\7u\2\2\u00d8.\3\2\2\2\u00d9\u00da\7k\2\2\u00da")
        buf.write("\u00db\7p\2\2\u00db\u00dc\7q\2\2\u00dc\u00dd\7v\2\2\u00dd")
        buf.write("\u00de\7e\2\2\u00de\u00df\7q\2\2\u00df\u00e0\7p\2\2\u00e0")
        buf.write("\u00e1\7v\2\2\u00e1\u00e2\7c\2\2\u00e2\u00e3\7k\2\2\u00e3")
        buf.write("\u00e4\7p\2\2\u00e4\u00e5\7u\2\2\u00e5\60\3\2\2\2\u00e6")
        buf.write("\u00e7\7o\2\2\u00e7\u00e8\7c\2\2\u00e8\u00e9\7v\2\2\u00e9")
        buf.write("\u00ea\7e\2\2\u00ea\u00eb\7j\2\2\u00eb\62\3\2\2\2\u00ec")
        buf.write("\u00ed\7k\2\2\u00ed\u00ee\7p\2\2\u00ee\64\3\2\2\2\u00ef")
        buf.write("\u00f0\7p\2\2\u00f0\u00f1\7q\2\2\u00f1\u00f2\7v\2\2\u00f2")
        buf.write("\u00f3\7k\2\2\u00f3\u00f4\7p\2\2\u00f4\66\3\2\2\2\u00f5")
        buf.write("\u00f6\7.\2\2\u00f68\3\2\2\2\u00f7\u00f8\7v\2\2\u00f8")
        buf.write("\u00f9\7t\2\2\u00f9\u00fa\7w\2\2\u00fa\u00fb\7g\2\2\u00fb")
        buf.write(":\3\2\2\2\u00fc\u00fd\7h\2\2\u00fd\u00fe\7c\2\2\u00fe")
        buf.write("\u00ff\7n\2\2\u00ff\u0100\7u\2\2\u0100\u0101\7g\2\2\u0101")
        buf.write("<\3\2\2\2\u0102\u0103\7p\2\2\u0103\u0104\7w\2\2\u0104")
        buf.write("\u0105\7n\2\2\u0105\u0106\7n\2\2\u0106>\3\2\2\2\u0107")
        buf.write("\u0108\7f\2\2\u0108\u0109\7c\2\2\u0109\u010a\7v\2\2\u010a")
        buf.write("\u010b\7g\2\2\u010b\u010c\7v\2\2\u010c\u010d\7k\2\2\u010d")
        buf.write("\u010e\7o\2\2\u010e\u010f\7g\2\2\u010f@\3\2\2\2\u0110")
        buf.write("\u0111\5G$\2\u0111B\3\2\2\2\u0112\u0115\5Q)\2\u0113\u0115")
        buf.write("\5S*\2\u0114\u0112\3\2\2\2\u0114\u0113\3\2\2\2\u0115D")
        buf.write("\3\2\2\2\u0116\u011a\t\2\2\2\u0117\u0119\t\3\2\2\u0118")
        buf.write("\u0117\3\2\2\2\u0119\u011c\3\2\2\2\u011a\u0118\3\2\2\2")
        buf.write("\u011a\u011b\3\2\2\2\u011bF\3\2\2\2\u011c\u011a\3\2\2")
        buf.write("\2\u011d\u0122\7$\2\2\u011e\u0121\5I%\2\u011f\u0121\5")
        buf.write("O(\2\u0120\u011e\3\2\2\2\u0120\u011f\3\2\2\2\u0121\u0124")
        buf.write("\3\2\2\2\u0122\u0120\3\2\2\2\u0122\u0123\3\2\2\2\u0123")
        buf.write("\u0125\3\2\2\2\u0124\u0122\3\2\2\2\u0125\u0126\7$\2\2")
        buf.write("\u0126H\3\2\2\2\u0127\u012a\7^\2\2\u0128\u012b\t\4\2\2")
        buf.write("\u0129\u012b\5K&\2\u012a\u0128\3\2\2\2\u012a\u0129\3\2")
        buf.write("\2\2\u012bJ\3\2\2\2\u012c\u012d\7w\2\2\u012d\u012e\5M")
        buf.write("\'\2\u012e\u012f\5M\'\2\u012f\u0130\5M\'\2\u0130\u0131")
        buf.write("\5M\'\2\u0131L\3\2\2\2\u0132\u0133\t\5\2\2\u0133N\3\2")
        buf.write("\2\2\u0134\u0135\n\6\2\2\u0135P\3\2\2\2\u0136\u0138\7")
        buf.write("/\2\2\u0137\u0136\3\2\2\2\u0137\u0138\3\2\2\2\u0138\u0139")
        buf.write("\3\2\2\2\u0139\u0140\5S*\2\u013a\u013c\7\60\2\2\u013b")
        buf.write("\u013d\t\7\2\2\u013c\u013b\3\2\2\2\u013d\u013e\3\2\2\2")
        buf.write("\u013e\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u0141\3")
        buf.write("\2\2\2\u0140\u013a\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u0147")
        buf.write("\3\2\2\2\u0142\u0144\t\b\2\2\u0143\u0145\t\t\2\2\u0144")
        buf.write("\u0143\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0146\3\2\2\2")
        buf.write("\u0146\u0148\5S*\2\u0147\u0142\3\2\2\2\u0147\u0148\3\2")
        buf.write("\2\2\u0148R\3\2\2\2\u0149\u0152\7\62\2\2\u014a\u014e\t")
        buf.write("\n\2\2\u014b\u014d\t\7\2\2\u014c\u014b\3\2\2\2\u014d\u0150")
        buf.write("\3\2\2\2\u014e\u014c\3\2\2\2\u014e\u014f\3\2\2\2\u014f")
        buf.write("\u0152\3\2\2\2\u0150\u014e\3\2\2\2\u0151\u0149\3\2\2\2")
        buf.write("\u0151\u014a\3\2\2\2\u0152T\3\2\2\2\u0153\u0155\t\13\2")
        buf.write("\2\u0154\u0153\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0154")
        buf.write("\3\2\2\2\u0156\u0157\3\2\2\2\u0157\u0158\3\2\2\2\u0158")
        buf.write("\u0159\b+\2\2\u0159V\3\2\2\2\20\2\u0114\u011a\u0120\u0122")
        buf.write("\u012a\u0137\u013e\u0140\u0144\u0147\u014e\u0151\u0156")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class ApiQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    STRING = 32
    NUMBER = 33
    KEYWORD = 34
    ESCAPED_STRING = 35
    FLOAT = 36
    INT = 37
    WS = 38

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'and'", "'('", "')'", "'or'", "'=='", "'!='", "'>'", 
            "'>='", "'<'", "'<='", "'like'", "'ilike'", "'notlike'", "'notilike'", 
            "'startswith'", "'istartswith'", "'endswith'", "'iendswith'", 
            "'contains'", "'notcontains'", "'icontains'", "'inotcontains'", 
            "'match'", "'in'", "'notin'", "','", "'true'", "'false'", "'null'", 
            "'datetime'" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "NUMBER", "KEYWORD", "ESCAPED_STRING", "FLOAT", "INT", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "STRING", 
                  "NUMBER", "KEYWORD", "ESCAPED_STRING", "ESC", "UNICODE", 
                  "HEX", "SAFECODEPOINT", "FLOAT", "INT", "WS" ]

    grammarFileName = "ApiQL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


